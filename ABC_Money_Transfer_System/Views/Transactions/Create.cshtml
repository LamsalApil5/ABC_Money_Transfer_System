@model ABC_Money_Transfer_System.Models.transactions

<h1>Create Transaction</h1>
<form method="post" asp-action="CreateTransaction">
    <div class="form-group">
        <label for="senderId">Sender</label>
        <select id="senderId" name="senderId" class="form-control" asp-items="ViewBag.Users" onchange="updateExchangeRate()">
            <option value="">Select User</option>
        </select>
        <span asp-validation-for="senderId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="receiverId">Receiver</label>
        <select asp-for="receiverId" class="form-control" asp-items="ViewBag.Users">
            <option value="">Select User</option>
        </select>
        <span asp-validation-for="receiverId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="transferAmount">Transfer Amount (MYR)</label>
        <input type="number" id="transferAmount" name="transferAmount" class="form-control" oninput="calculateInNPR()" value="0" required />
    </div>

    <div class="form-group">
        <label for="exchangeRate">Exchange Rate</label>
        <input type="number" id="exchangeRate" name="exchangeRate" class="form-control" value="0" readonly />
    </div>

    <div class="form-group">
        <label for="payoutAmount">Amount in NPR</label>
        <input type="text" id="payoutAmount" class="form-control" readonly />
    </div>

    <button type="submit" class="btn btn-primary">Create Transaction</button>
</form>

<script>
    const exchangeRates = @Html.Raw(Json.Serialize(ViewBag.ExchangeRates));

    function updateExchangeRate() {
        const senderDropdown = document.getElementById('senderId');
        const exchangeRateInput = document.getElementById('exchangeRate');
        const selectedOption = senderDropdown.options[senderDropdown.selectedIndex];
        // Extract ISO3 from the user selection
        const iso3Match = selectedOption.text.match(/\((.*?)\)$/);
        const iso3 = iso3Match ? iso3Match[1] : null;

        // Set exchange rate
        exchangeRateInput.value = iso3 && exchangeRates[iso3] ? exchangeRates[iso3].toFixed(2) : "0";
        console.log(exchangeRateInput.value);

        calculateInNPR();
    }

    function calculateInNPR() {
        const transferAmount = parseFloat(document.getElementById('transferAmount').value) || 0;
        const exchangeRate = parseFloat(document.getElementById('exchangeRate').value) || 0;
        const payoutAmount = transferAmount * exchangeRate;

        document.getElementById('payoutAmount').value = payoutAmount.toFixed(2);
    }
</script>
